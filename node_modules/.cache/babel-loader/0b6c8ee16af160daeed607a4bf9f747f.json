{"ast":null,"code":"var _jsxFileName = \"/Users/moritzhauschulz/personal_website/moritzhauschulz.github.io/src/components/Contact/EmailLink.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// Validates the first half of an email address.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validateText = text => {\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n  return re.test(text) || text.length === 0;\n};\nconst messages = ['hi', 'hello', 'hola', 'you-can-email-me-at-literally-anything! Really', 'well, not anything. But most things', 'like-this', 'or-this', 'but not this :(  ', 'you.can.also.email.me.with.specific.topics.like', 'just-saying-hi', 'please-work-for-us', 'help', 'admin', 'or-I-really-like-your-website', 'thanks'];\nconst useInterval = (callback, delay) => {\n  _s();\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\nconst EmailLink = ({\n  loopMessage\n}) => {\n  _s2();\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(0); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(() => {\n    let newIdx = idx;\n    let newChar = char;\n    if (char - hold >= messages[idx].length) {\n      newIdx += 1;\n      newChar = 0;\n    }\n    if (newIdx === messages.length) {\n      if (loopMessage) {\n        updateIter(0);\n        updateChar(0);\n      } else {\n        setIsActive(false);\n      }\n    } else {\n      updateMessage(messages[newIdx].slice(0, newChar));\n      updateIter(newIdx);\n      updateChar(newChar + 1);\n    }\n  }, isActive ? delay : null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inline-container\",\n    style: validateText(message) ? {} : {\n      color: 'red'\n    },\n    onMouseEnter: () => setIsActive(false),\n    onMouseLeave: () => idx < messages.length && setIsActive(true),\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: validateText(message) ? `mailto:${message}@mldangelo.com` : '',\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"@mldangelo.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(EmailLink, \"DYEnzVPlCuDu3kT5OgXxWZlTWVQ=\", false, function () {\n  return [useInterval];\n});\n_c = EmailLink;\nEmailLink.defaultProps = {\n  loopMessage: false\n};\nEmailLink.propTypes = {\n  loopMessage: PropTypes.bool\n};\nexport default EmailLink;\nvar _c;\n$RefreshReg$(_c, \"EmailLink\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PropTypes","jsxDEV","_jsxDEV","validateText","text","re","test","length","messages","useInterval","callback","delay","_s","savedCallback","current","id","setInterval","clearInterval","EmailLink","loopMessage","_s2","hold","idx","updateIter","message","updateMessage","char","updateChar","isActive","setIsActive","newIdx","newChar","slice","className","style","color","onMouseEnter","onMouseLeave","children","href","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","propTypes","bool","$RefreshReg$"],"sources":["/Users/moritzhauschulz/personal_website/moritzhauschulz.github.io/src/components/Contact/EmailLink.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// Validates the first half of an email address.\nconst validateText = (text) => {\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n  return re.test(text) || text.length === 0;\n};\n\nconst messages = [\n  'hi',\n  'hello',\n  'hola',\n  'you-can-email-me-at-literally-anything! Really',\n  'well, not anything. But most things',\n  'like-this',\n  'or-this',\n  'but not this :(  ',\n  'you.can.also.email.me.with.specific.topics.like',\n  'just-saying-hi',\n  'please-work-for-us',\n  'help',\n  'admin',\n  'or-I-really-like-your-website',\n  'thanks',\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst EmailLink = ({ loopMessage }) => {\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(0); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(\n    () => {\n      let newIdx = idx;\n      let newChar = char;\n      if (char - hold >= messages[idx].length) {\n        newIdx += 1;\n        newChar = 0;\n      }\n      if (newIdx === messages.length) {\n        if (loopMessage) {\n          updateIter(0);\n          updateChar(0);\n        } else {\n          setIsActive(false);\n        }\n      } else {\n        updateMessage(messages[newIdx].slice(0, newChar));\n        updateIter(newIdx);\n        updateChar(newChar + 1);\n      }\n    },\n    isActive ? delay : null,\n  );\n\n  return (\n    <div\n      className=\"inline-container\"\n      style={validateText(message) ? {} : { color: 'red' }}\n      onMouseEnter={() => setIsActive(false)}\n      onMouseLeave={() => idx < messages.length && setIsActive(true)}\n    >\n      <a href={validateText(message) ? `mailto:${message}@mldangelo.com` : ''}>\n        <span>{message}</span>\n        <span>@mldangelo.com</span>\n      </a>\n    </div>\n  );\n};\n\nEmailLink.defaultProps = {\n  loopMessage: false,\n};\n\nEmailLink.propTypes = {\n  loopMessage: PropTypes.bool,\n};\n\nexport default EmailLink;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}