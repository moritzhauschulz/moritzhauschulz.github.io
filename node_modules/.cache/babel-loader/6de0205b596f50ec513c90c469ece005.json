{"ast":null,"code":"var _jsxFileName = \"/Users/moritzhauschulz/personal_website/moritzhauschulz.github.io/src/components/Projects/Cell.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cell-container\",\n  children: /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"mini-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: data.link,\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n        className: \"published\",\n        children: dayjs(data.date).format('MMMM, YYYY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: data.link,\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}${data.image}`,\n        alt: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Cell;\nCell.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    image: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","PropTypes","dayjs","jsxDEV","_jsxDEV","Cell","data","className","children","href","link","title","fileName","_jsxFileName","lineNumber","columnNumber","date","format","src","process","env","PUBLIC_URL","image","alt","desc","_c","propTypes","shape","string","isRequired","$RefreshReg$"],"sources":["/Users/moritzhauschulz/personal_website/moritzhauschulz.github.io/src/components/Projects/Cell.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\n\nconst Cell = ({ data }) => (\n  <div className=\"cell-container\">\n    <article className=\"mini-post\">\n      <header>\n        <h3>\n          <a href={data.link}>{data.title}</a>\n        </h3>\n        <time className=\"published\">\n          {dayjs(data.date).format('MMMM, YYYY')}\n        </time>\n      </header>\n      <a href={data.link} className=\"image\">\n        <img src={`${process.env.PUBLIC_URL}${data.image}`} alt={data.title} />\n      </a>\n      <div className=\"description\">\n        <p>{data.desc}</p>\n      </div>\n    </article>\n  </div>\n);\n\nCell.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    image: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Cell;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,kBACpBF,OAAA;EAAKG,SAAS,EAAC,gBAAgB;EAAAC,QAAA,eAC7BJ,OAAA;IAASG,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC5BJ,OAAA;MAAAI,QAAA,gBACEJ,OAAA;QAAAI,QAAA,eACEJ,OAAA;UAAGK,IAAI,EAAEH,IAAI,CAACI,IAAK;UAAAF,QAAA,EAAEF,IAAI,CAACK;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACLX,OAAA;QAAMG,SAAS,EAAC,WAAW;QAAAC,QAAA,EACxBN,KAAK,CAACI,IAAI,CAACU,IAAI,CAAC,CAACC,MAAM,CAAC,YAAY;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACTX,OAAA;MAAGK,IAAI,EAAEH,IAAI,CAACI,IAAK;MAACH,SAAS,EAAC,OAAO;MAAAC,QAAA,eACnCJ,OAAA;QAAKc,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAGf,IAAI,CAACgB,KAAK,EAAG;QAACC,GAAG,EAAEjB,IAAI,CAACK;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACJX,OAAA;MAAKG,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BJ,OAAA;QAAAI,QAAA,EAAIF,IAAI,CAACkB;MAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACP,CACN;AAACU,EAAA,GAnBIpB,IAAI;AAqBVA,IAAI,CAACqB,SAAS,GAAG;EACfpB,IAAI,EAAEL,SAAS,CAAC0B,KAAK,CAAC;IACpBhB,KAAK,EAAEV,SAAS,CAAC2B,MAAM,CAACC,UAAU;IAClCnB,IAAI,EAAET,SAAS,CAAC2B,MAAM;IACtBN,KAAK,EAAErB,SAAS,CAAC2B,MAAM,CAACC,UAAU;IAClCb,IAAI,EAAEf,SAAS,CAAC2B,MAAM,CAACC,UAAU;IACjCL,IAAI,EAAEvB,SAAS,CAAC2B,MAAM,CAACC;EACzB,CAAC,CAAC,CAACA;AACL,CAAC;AAED,eAAexB,IAAI;AAAC,IAAAoB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}