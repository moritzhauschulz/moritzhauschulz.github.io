{"version":3,"file":"static/js/391.2bb13b2d.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Research.js","components/Resume/Experience.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","components/Resume/Grades/CategoryButton.js","components/Resume/Grades/GradeBar.js","components/Resume/Grades.js","components/Resume/Other/Other.js","components/Resume/Other.js","components/Resume/References.js","data/resume/other.js","data/resume/degrees.js","data/resume/work.js","data/resume/research.js","data/resume/skills.js","data/resume/grades.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\">\n        <a href={data.link}>{data.school}</a>, {data.year}\n      </p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree data={degree} key={degree.school} />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      school: PropTypes.string,\n      degree: PropTypes.string,\n      link: PropTypes.string,\n      year: PropTypes.string,\n    }),\n  ),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'markdown-to-jsx';\nimport dayjs from 'dayjs';\n\n// Custom Link Renderer for Markdown to handle external/internal links\nconst LinkRenderer = ({ href, children }) => {\n  const isExternal = (url) => url && (url.startsWith('http') || url.endsWith('.pdf'));\n\n  return (\n    <a\n      href={href}\n      target={isExternal(href) ? '_blank' : '_self'}\n      rel={isExternal(href) ? 'noopener noreferrer' : undefined}\n    >\n      {children}\n    </a>\n  );\n};\n\nLinkRenderer.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst Job = ({\n  data: {\n    name, position, url, startDate, endDate, summary, highlights,\n  },\n}) => {\n  const isExternal = url && (url.startsWith('http') || url.endsWith('.pdf'));\n\n  return (\n    <article className=\"jobs-container\">\n      <header>\n        <h4>\n          {url ? (\n            <a\n              href={url}\n              target={isExternal ? '_blank' : '_self'}\n              rel={isExternal ? 'noopener noreferrer' : undefined}\n            >\n              {name}\n            </a>\n          ) : (\n            name\n          )} - {position}\n        </h4>\n        <p className=\"daterange\">\n          {dayjs(startDate).format('MMMM YYYY')} -{' '}\n          {endDate ? dayjs(endDate).format('MMMM YYYY') : 'PRESENT'}\n        </p>\n      </header>\n      {summary && (\n        <Markdown\n          options={{\n            overrides: {\n              a: { component: LinkRenderer },\n              p: {\n                props: {\n                  className: 'summary',\n                },\n              },\n            },\n          }}\n        >\n          {summary}\n        </Markdown>\n      )}\n      {highlights && (\n        <ul className=\"points\">\n          {highlights.map((highlight) => (\n            <li key={highlight}> {/* Use highlight as the key if it's unique */}\n              <Markdown\n                options={{\n                  overrides: {\n                    a: { component: LinkRenderer }, // Use custom link rendering in highlights\n                  },\n                }}\n              >\n                {highlight}\n              </Markdown>\n            </li>\n          ))}\n        </ul>\n      )}\n    </article>\n  );\n};\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    url: PropTypes.string,\n    startDate: PropTypes.string.isRequired,\n    endDate: PropTypes.string,\n    summary: PropTypes.string,\n    highlights: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Research = ({ data }) => (\n  <div className=\"research\">\n    <div className=\"link-to\" id=\"research\" />\n    <div className=\"title\">\n      <h3>Research Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job data={job} key={`${job.name}-${job.position}`} />\n    ))}\n  </div>\n);\n\nResearch.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string,\n      position: PropTypes.string,\n      url: PropTypes.string,\n      startDate: PropTypes.string,\n      endDate: PropTypes.string,\n      highlights: PropTypes.arrayOf(PropTypes.string),\n      summary: PropTypes.string,\n    }),\n  ),\n};\n\nResearch.defaultProps = {\n  data: [],\n};\n\nexport default Research;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Professional Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job data={job} key={`${job.name}-${job.position}`} />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string,\n      position: PropTypes.string,\n      url: PropTypes.string,\n      startDate: PropTypes.string,\n      endDate: PropTypes.string,\n      highlights: PropTypes.arrayOf(PropTypes.string),\n      summary: PropTypes.string,\n    }),\n  ),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillBar = ({ data, categories }) => {\n  const { category, competency, title } = data;\n\n  // TODO: Consider averaging colors\n  const titleStyle = {\n    background: categories\n      .filter((cat) => category.includes(cat.name))\n      .map((cat) => cat.color)[0],\n  };\n\n  const barStyle = {\n    ...titleStyle,\n    width: `${String(Math.min(100, Math.max((competency / 5.0) * 100.0, 0)))}%`,\n  };\n\n  return (\n    <div className=\"skillbar clearfix\">\n      <div className=\"skillbar-title\" style={titleStyle}>\n        <span>{title}</span>\n      </div>\n      <div className=\"skillbar-bar\" style={barStyle} />\n      <div className=\"skill-bar-percent\">{competency} / 5</div>\n    </div>\n  );\n};\n\nSkillBar.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\n    competency: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      color: PropTypes.string,\n    }),\n  ),\n};\n\nSkillBar.defaultProps = {\n  categories: [],\n};\n\nexport default SkillBar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst Skills = ({ skills, categories }) => {\n  const initialButtons = Object.fromEntries(\n    [['All', false]].concat(categories.map(({ name }) => [name, false])),\n  );\n\n  const [buttons, setButtons] = useState(initialButtons);\n\n  const handleChildClick = (label) => {\n    // Toggle button that was clicked. Turn all other buttons off.\n    const newButtons = Object.keys(buttons).reduce(\n      (obj, key) => ({\n        ...obj,\n        [key]: label === key && !buttons[key],\n      }),\n      {},\n    );\n    // Turn on 'All' button if other buttons are off\n    newButtons.All = !Object.keys(buttons).some((key) => newButtons[key]);\n    setButtons(newButtons);\n  };\n\n  const getRows = () => {\n    // search for true active categories\n    const actCat = Object.keys(buttons).reduce(\n      (cat, key) => (buttons[key] ? key : cat),\n      'All',\n    );\n\n    const comparator = (a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    };\n\n    return skills\n      .sort(comparator)\n      .filter((skill) => actCat === 'All' || skill.category.includes(actCat))\n      .map((skill) => (\n        <SkillBar categories={categories} data={skill} key={skill.title} />\n      ));\n  };\n\n  const getButtons = () => Object.keys(buttons).map((key) => (\n    <CategoryButton\n      label={key}\n      key={key}\n      active={buttons}\n      handleClick={handleChildClick}\n    />\n  ));\n\n  return (\n    <div className=\"skills\">\n      <div className=\"link-to\" id=\"skills\" />\n      <div className=\"title\">\n        <h3>Skills</h3>\n        <p>\n          Some rough, mostly honest estimations of my skill level across domains.\n        </p>\n      </div>\n      <div className=\"skill-button-container\">{getButtons()}</div>\n      <div className=\"skill-row-container\">{getRows()}</div>\n    </div>\n  );\n};\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      competency: PropTypes.number,\n      category: PropTypes.arrayOf(PropTypes.string),\n    }),\n  ),\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      color: PropTypes.string,\n    }),\n  ),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GradeBar = ({ data, categories, maxScale = 100 }) => {\n  const { category, competency, title } = data;\n\n  // Find the background color for the title\n  const titleStyle = {\n    background: categories\n      .filter((cat) => category.includes(cat.name))\n      .map((cat) => cat.color)[0],\n  };\n\n  // Determine if the grade is numeric\n  const isNumericGrade = typeof competency === 'number' && !Number.isNaN(competency);\n\n  // Calculate the bar width\n  const barWidth = isNumericGrade ? (competency / maxScale) * 100 : 100;\n\n  // Determine the class for the bar\n  const barClass = isNumericGrade ? 'numeric-grade' : 'non-numeric-grade';\n\n  const barStyle = {\n    ...titleStyle,\n    width: `${barWidth}%`,\n  };\n\n  return (\n    <div className=\"skillbar clearfix\">\n      <div className=\"skillbar-title\" style={titleStyle}>\n        <span>{title}</span>\n      </div>\n      <div className={`skillbar-bar ${barClass}`} style={barStyle} />\n      <div className=\"skill-bar-percent\">\n        {isNumericGrade ? `${competency} / ${maxScale}` : competency}\n      </div>\n    </div>\n  );\n};\n\nGradeBar.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\n    competency: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      color: PropTypes.string,\n    }),\n  ),\n  maxScale: PropTypes.number,\n};\n\nGradeBar.defaultProps = {\n  categories: [],\n  maxScale: 100,\n};\n\nexport default GradeBar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Grades/CategoryButton';\nimport GradeBar from './Grades/GradeBar';\n\nconst Grades = ({ grades, categories }) => {\n  const initialButtons = Object.fromEntries(\n    [['All', false]].concat(categories.map(({ name }) => [name, false])),\n  );\n\n  const [buttons, setButtons] = useState(initialButtons);\n\n  const handleChildClick = (label) => {\n    // Toggle button that was clicked. Turn all other buttons off.\n    const newButtons = Object.keys(buttons).reduce(\n      (obj, key) => ({\n        ...obj,\n        [key]: label === key && !buttons[key],\n      }),\n      {},\n    );\n    // Turn on 'All' button if other buttons are off\n    newButtons.All = !Object.keys(buttons).some((key) => newButtons[key]);\n    setButtons(newButtons);\n  };\n\n  const isNumeric = (value) => !Number.isNaN(value) && value !== null && value !== undefined;\n\n  const getRows = () => {\n    // Search for the active categories\n    const actCat = Object.keys(buttons).reduce(\n      (cat, key) => (buttons[key] ? key : cat),\n      'All',\n    );\n\n    const comparator = (a, b) => {\n      const aIsNumeric = isNumeric(a.competency);\n      const bIsNumeric = isNumeric(b.competency);\n\n      // Non-numeric grades go to the bottom\n      if (!aIsNumeric && bIsNumeric) return 1;\n      if (aIsNumeric && !bIsNumeric) return -1;\n\n      // For numeric grades, sort by percentage\n      if (aIsNumeric && bIsNumeric) {\n        // Find the category and maxScale for each grade\n        const aCategory = categories.find((cat) => a.category.includes(cat.name));\n        const bCategory = categories.find((cat) => b.category.includes(cat.name));\n        const aMaxScale = aCategory ? aCategory.maxScale : 100;\n        const bMaxScale = bCategory ? bCategory.maxScale : 100;\n\n        // Calculate the percentage for each grade\n        const aPercentage = (a.competency / aMaxScale) * 100;\n        const bPercentage = (b.competency / bMaxScale) * 100;\n\n        if (aPercentage > bPercentage) return -1;\n        if (aPercentage < bPercentage) return 1;\n      }\n\n      // Sort non-numeric grades by title as a fallback\n      if (a.title > b.title) return 1;\n      if (a.title < b.title) return -1;\n\n      return 0;\n    };\n\n    return grades\n      .sort(comparator)\n      .filter((grade) => actCat === 'All' || grade.category.includes(actCat))\n      .map((grade) => {\n        // Find the maxScale for the grade's category\n        const gradeCategory = categories.find((cat) => grade.category.includes(cat.name));\n        const maxScale = gradeCategory ? gradeCategory.maxScale : 100;\n\n        return (\n          <GradeBar\n            categories={categories}\n            data={grade}\n            key={grade.title}\n            maxScale={maxScale}\n          />\n        );\n      });\n  };\n\n  const getButtons = () => Object.keys(buttons).map((key) => (\n    <CategoryButton\n      label={key}\n      key={key}\n      active={buttons}\n      handleClick={handleChildClick}\n    />\n  ));\n\n  return (\n    <div className=\"grades\">\n      <div className=\"link-to\" id=\"grades\" />\n      <div className=\"title\">\n        <h3>Grades</h3>\n        <p>\n          Some courses and grades I have collected over the years.\n        </p>\n      </div>\n      <div className=\"skill-button-container\">{getButtons()}</div>\n      <div className=\"skill-row-container\">{getRows()}</div>\n    </div>\n  );\n};\n\nGrades.propTypes = {\n  grades: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      category: PropTypes.arrayOf(PropTypes.string).isRequired,\n      competency: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    }),\n  ).isRequired,\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      maxScale: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Grades;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'markdown-to-jsx';\n\nconst LinkRenderer = ({ href, children }) => {\n  const isExternal = (url) => url && (url.startsWith('http') || url.endsWith('.pdf'));\n\n  return (\n    <a\n      href={href}\n      target={isExternal(href) ? '_blank' : '_self'}\n      rel={isExternal(href) ? 'noopener noreferrer' : undefined}\n    >\n      {children}\n    </a>\n  );\n};\n\nconst Other = ({ data }) => (\n  <li className=\"other-container\">\n    <h4 className=\"other-name\">{data.title}:</h4>\n    <Markdown\n      options={{\n        overrides: {\n          a: {\n            component: LinkRenderer, // Use LinkRenderer to handle links\n          },\n          p: {\n            props: {\n              className: 'other-description',\n            },\n          },\n        },\n      }}\n    >\n      {data.description}\n    </Markdown>\n  </li>\n);\n\nOther.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired, // Markdown description\n  }).isRequired,\n};\n\nLinkRenderer.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Other;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Other from './Other/Other';\n\nconst getRows = (others) => others\n  .sort((a, b) => {\n    let ret = 0;\n    if (a.university > b.university) ret = -1;\n    else if (a.university < b.university) ret = 1;\n    else if (a.number > b.number) ret = 1;\n    else if (a.number < b.number) ret = -1;\n    return ret;\n  })\n  .map((other, idx) => (\n    <Other\n      data={other}\n      key={other.title}\n      last={idx === others.length - 1}\n    />\n  ));\n\nconst Others = ({ data }) => (\n  <div className=\"others\">\n    <div className=\"link-to\" id=\"others\" />\n    <div className=\"title\">\n      <h3>Other Activities and Awards</h3>\n    </div>\n    <ul className=\"other-list\">{getRows(data)}</ul>\n  </div>\n);\n\nOthers.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      number: PropTypes.string,\n      link: PropTypes.string,\n      university: PropTypes.string,\n    }),\n  ),\n};\n\nOthers.defaultProps = {\n  data: [],\n};\n\nexport default Others;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","const other = [\n  {\n    title: 'Scholarship',\n    description: 'I am fortunate to have been supported by the [Stiftung der Deutschen Wirtschaft](https://www.sdw.org/) (sdw) during both my BSc and MSc studies. I try to give back as the current president of the UK group of scholars, coordinating event planning and member integration.',\n  },\n  {\n    title: 'Physics Award',\n    description: 'Perhaps explaining my late pivot to a STEM subject, I achieved the highest possible grade in my Physics exam in the German Abitur for which I received an award by the [German Physical Society](https://www.dpg-physik.de/). I also received state level awards for a project on sonar systems in the German \\'[Jugend Forscht](https://www.jugend-forscht.de/)\\' competition.',\n  },\n  {\n    title: 'Student Representation',\n    description: 'I was somewhat active in student politics at my undergraduate institution. I was a member of various student-staff committees and represented the LSE student union at the National Union of Students annual conference in 2020. I also enjoyed participating in different simulations such as Model United Nations and Model European Parliament conferences.',\n  },\n  {\n    title: 'Sports',\n    description: 'I am an [avid runner](https://www.strava.com/athletes/91079163), and have been an active member of LSE\\'s rowing club and Wolfson College Boat Club.',\n  },\n];\n\nexport default other;\n","const degrees = [\n  {\n    school: 'University of Oxford',\n    degree: 'MSc Mathematical Sciences',\n    link: 'https://www.maths.ox.ac.uk/',\n    year: '2025 (expected)',\n  },\n  {\n    school: 'Imperial College London',\n    degree: 'MSc Advanced Computing',\n    link: 'https://www.imperial.ac.uk/computing/',\n    year: '2024',\n  },\n  {\n    school: 'University of California at Berkeley',\n    degree: 'Visiting Student',\n    link: 'https://www.berkeley.edu/',\n    year: '2021-2022',\n  },\n  {\n    school: 'London School of Economics and Political Science',\n    degree: 'BSc Econometrics and Mathematical Economics',\n    link: 'https://www.lse.ac.uk/economics',\n    year: '2018-2022',\n  },\n];\n\nexport default degrees;\n","const work = [\n  {\n    name: 'Alexandria-Media',\n    position: 'Technical Product Owner',\n    url: 'https://alexandria-media.org/',\n    startDate: '2022-10-01',\n    endDate: '2023-09-30',\n    summary: 'First employee at Alexandria Media, a start-up supported by LSE Innovation, focusing on digitalizing media licensing through innovative smart contracts.',\n    highlights: [\n      'Shaped a shared vision within the engineering team, based on input from major UK and US studios',\n      'Developed a modular framework to streamline the contracting workflow in the film industry in cooperation with major UK law firm',\n      'Drove the implementation of a digital twin agreement that is both private and cryptographically verifiable to all parties based on the [Hedera](https://hedera.com/) platform',\n      'Built and launched MVP for showcase to new clients and investors',\n    ],\n  },\n  {\n    name: 'Centre for Economic Performance (LSE)',\n    position: 'Research Assistant',\n    startDate: '2020-10-01',\n    endDate: '2022-11-30',\n    summary: 'See research experience above...',\n    highlights: [\n    ],\n  },\n  {\n    name: 'Kiel Institute',\n    position: 'Research Intern',\n    startDate: '2019-06-01',\n    endDate: '2019-08-30',\n    summary: 'See research experience above...',\n    highlights: [\n    ],\n  },\n];\n\nexport default work;\n","const research = [\n  {\n    name: 'University of Oxford',\n    position: 'MSc Thesis',\n    startDate: '2024-10-01',\n    endDate: '2025-05-30',\n    summary: 'Research focused on structure-preserving operator learning for partial differential equations (PDEs).',\n    highlights: [\n      'Implemented DeepONet and FNO architectures to learn solution operators for harmonic oscillators and Schrödinger equations, exploring both data-driven and physics-informed loss functions.',\n      'Augmented neural architectures to ensure energy conservation through branch orthogonalization and trunk normalization in DeepONet and regularization terms in FNO loss.',\n      'Reviewed literature on PINNs, operator learning, and numerical baselines such as finite element methods.',\n    ],\n  },\n  {\n    name: 'Imperial College London',\n    position: 'MSc Thesis',\n    startDate: '2024-04-01',\n    endDate: '2024-09-30',\n    summary: 'Developed novel methods for training energy-based models (EBMs) using discrete flow sampling techniques.',\n    highlights: [\n      'Developed a data-free regression-based discrete flow sampler, training discrete diffusion with importance sampling and a learned proposal distribution.',\n      'Deployed the novel sampler to train EBMs, achieving state-of-the-art results on synthetic and discrete image data.',\n      'Proved analytically the validity of the regression loss and convergence of the EBM training algorithm.',\n      'Surveyed state-of-the-art methods for sampling discrete distributions, including MCMC and learned samplers such as GFlowNet.',\n    ],\n  },\n  {\n    name: 'Centre for Economic Performance (LSE)',\n    position: 'Research Assistant',\n    startDate: '2020-10-01',\n    endDate: '2022-11-30',\n    summary: 'Supported multiple research projects involving machine learning, econometrics, and geo-spatial modeling.',\n    highlights: [\n      'Developed an LSTM-based classifier to detect fraud schemes from smart contracts on decentralized networks.',\n      'Led a project on statistical methods used by the UK Government to assess police performance, producing an authored report.',\n      'Built geo-spatial models in Python and QGIS to simulate the impact of WWII bombs on housing stock in London.',\n      'Conducted instrumental variable regressions to identify the causal effect of social housing on crime rates.',\n    ],\n  },\n  {\n    name: 'London School of Economics',\n    position: 'BSc Thesis',\n    startDate: '2020-09-01',\n    endDate: '2021-07-30',\n    summary: 'Empirical research on monetary policy in the Eurozone, focusing on the sovereign commitment channel.',\n    highlights: [\n      'Developed a framework for analyzing the differential impact of centralized monetary policy on sovereign states in monetary unions.',\n      'Empirically evidenced the existence of a “Sovereign Commitment” causal channel in Eurozone monetary policy.',\n      'Devised a quantitative identification strategy based on factor analysis of yield curves and constraint optimization.',\n    ],\n  },\n  {\n    name: 'Kiel Institute',\n    position: 'Research Intern',\n    startDate: '2019-06-01',\n    endDate: '2019-08-30',\n    summary: 'Worked on consolidating and analyzing sovereign debt data using automated pipelines.',\n    highlights: [\n      'Implemented a pre-processing pipeline for sovereign debt data from Thomson Reuters and Bloomberg.',\n      'Automated data visualization strategies to identify anomalies in time series of debt volume.',\n      'Presented a strategy for further consolidation of databases and introduced new team members to the codebase.',\n    ],\n  },\n];\n\nexport default research;\n","const skills = [\n  {\n    title: 'Spanish',\n    competency: 4,\n    category: ['Natural Languages'],\n  },\n  {\n    title: 'French',\n    competency: 1,\n    category: ['Natural Languages'],\n  },\n  {\n    title: 'English',\n    competency: 5,\n    category: ['Natural Languages'],\n  },\n  {\n    title: 'German',\n    competency: 5,\n    category: ['Natural Languages'],\n  },\n  {\n    title: 'Python',\n    competency: 4,\n    category: ['Programming Languages'],\n  },\n  {\n    title: 'PyTorch',\n    competency: 5,\n    category: ['Programming Languages'],\n  },\n  {\n    title: 'Java',\n    competency: 3,\n    category: ['Programming Languages'],\n  },\n  {\n    title: 'Solidity',\n    competency: 2,\n    category: ['Programming Languages'],\n  },\n  {\n    title: 'SQL',\n    competency: 2,\n    category: ['Programming Languages'],\n  },\n  {\n    title: 'QGIS',\n    competency: 4,\n    category: ['Analytics'],\n  },\n  {\n    title: 'Deep Learning',\n    competency: 5,\n    category: ['ML Engineering'],\n  },\n  {\n    title: 'NLP',\n    competency: 4,\n    category: ['ML Engineering'],\n  },\n  {\n    title: 'Econometrics',\n    competency: 4,\n    category: ['Analytics'],\n  },\n  {\n    title: 'Git/Github',\n    competency: 3,\n    category: ['Tools'],\n  },\n  {\n    title: 'LaTeX',\n    competency: 4,\n    category: ['Tools'],\n  },\n  {\n    title: 'Numpy',\n    competency: 4,\n    category: ['Data Engineering', 'ML Engineering'],\n  },\n  {\n    title: 'Jupyter',\n    competency: 3,\n    category: ['Data Engineering', 'ML Engineering'],\n  },\n  {\n    title: 'HTML + CSS',\n    competency: 1,\n    category: ['Web Development', 'Programming Languages'],\n  },\n  {\n    title: 'R',\n    competency: 3,\n    category: ['Programming Languages'],\n  },\n  {\n    title: 'Graph Based Learning',\n    competency: 4,\n    category: ['ML Engineering'],\n  },\n  {\n    title: 'Pandas',\n    competency: 4,\n    category: ['Data Engineering', 'ML Engineering'],\n  },\n  {\n    title: 'Matplotlib',\n    competency: 3,\n    category: ['Data Engineering', 'ML Engineering'],\n  },\n  {\n    title: 'Scikit-Learn',\n    competency: 4,\n    category: ['Data Engineering', 'ML Engineering'],\n  },\n  {\n    title: 'Quiskit',\n    competency: 2,\n    category: ['Quantum', 'Programming Languages'],\n  },\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\n// this is a list of colors that I like. The length should be === to the\n// number of categories. Re-arrange this list until you find a pattern you like.\nconst colors = [\n  '#E69F00',\n  '#56B4E9',\n  '#009E73',\n  '#F0E442',\n  '#0072B2',\n  '#D55E00',\n  '#CC79A7',\n  '#999999',\n];\n\nconst SkillCategories = [...new Set(skills.flatMap(({ category }) => category))]\n  .sort()\n  .map((category, index) => ({\n    name: category,\n    color: colors[index],\n  }));\n\nexport { SkillCategories, skills };\n","const grades = [\n  {\n    title: 'ST102 – Elementary Statistical Theory',\n    competency: 93,\n    category: ['LSE'],\n  },\n  {\n    title: 'EC100 – Economics A',\n    competency: 83,\n    category: ['LSE'],\n  },\n  {\n    title: 'MA103 – Introduction to Abstract Mathematics',\n    competency: 76,\n    category: ['LSE'],\n  },\n  {\n    title: 'MA100 – Mathematical Methods',\n    competency: 74,\n    category: ['LSE'],\n  },\n  {\n    title: 'EC210 – Macroeconomic Principles',\n    competency: 89,\n    category: ['LSE'],\n  },\n  {\n    title: 'EC202 – Microeconomic Principles II',\n    competency: 80,\n    category: ['LSE'],\n  },\n  {\n    title: 'EC221 – Principles of Econometrics',\n    competency: 75,\n    category: ['LSE'],\n  },\n  {\n    title: 'MA203 – Real Analysis',\n    competency: 95,\n    category: ['LSE'],\n  },\n  {\n    title: 'MA210 – Discrete Mathematics',\n    competency: 100,\n    category: ['LSE'],\n  },\n  {\n    title: 'EC309 – Econometric Theory',\n    competency: 83,\n    category: ['LSE'],\n  },\n  {\n    title: 'EC310 – Behavioural Economics',\n    competency: 77,\n    category: ['LSE'],\n  },\n  {\n    title: 'EC331 – Quantitative Thesis',\n    competency: 73,\n    category: ['LSE'],\n  },\n  {\n    title: 'MA211 – Algebra and Number Theory',\n    competency: 88,\n    category: ['LSE'],\n  },\n  {\n    title: 'MA317 – Complex Analysis',\n    competency: 51,\n    category: ['LSE'],\n  },\n  {\n    title: 'COMPSCI 61A – Structure and Interpretation of Computer Programs',\n    competency: 13.20, // B+\n    category: ['UC Berkeley'],\n  },\n  {\n    title: 'MATH 110 – Linear Algebra',\n    competency: 16.00, // A\n    category: ['UC Berkeley'],\n  },\n  {\n    title: 'MATH 126 – Introduction to Partial Differential Equations',\n    competency: 'P', // Pass\n    category: ['UC Berkeley'],\n  },\n  {\n    title: 'MATH 202A – Topology & Analysis',\n    competency: 12.00, // B\n    category: ['UC Berkeley'],\n  },\n  {\n    title: 'COMPSCI 61B – Data Structures',\n    competency: 16.00, // A\n    category: ['UC Berkeley'],\n  },\n  {\n    title: 'MATH 114 – Abstract Algebra II',\n    competency: 'P', // Pass\n    category: ['UC Berkeley'],\n  },\n  {\n    title: 'MATH 136 – Incompleteness and Undecidability',\n    competency: 14.80, // A-\n    category: ['UC Berkeley'],\n  },\n  // {\n  //   title: 'MATH 214 – Differential Topology',\n  //   competency: 'NP', // No Pass\n  //   category: ['UC Berkeley'],\n  // },\n  {\n    title: 'COMP70005 – Complexity',\n    competency: 84.0,\n    category: ['Imperial'],\n  },\n  {\n    title: 'COMP70007 – Computational Optimisation',\n    competency: 62.0,\n    category: ['Imperial'],\n  },\n  {\n    title: 'COMP70105 – Deep Graph-Based Learning',\n    competency: 82.91,\n    category: ['Imperial'],\n  },\n  {\n    title: 'COMP70010 – Deep Learning',\n    competency: 82.16,\n    category: ['Imperial'],\n  },\n  {\n    title: 'COMP70029 – MSc Advanced Computing Individual Project',\n    competency: 73.0,\n    category: ['Imperial'],\n  },\n  {\n    title: 'COMP70015 – Mathematics for Machine Learning',\n    competency: 83.9,\n    category: ['Imperial'],\n  },\n  {\n    title: 'COMP70016 – Natural Language Processing',\n    competency: 83.77,\n    category: ['Imperial'],\n  },\n  {\n    title: 'COMP70021 – Quantum Computing',\n    competency: 84.13,\n    category: ['Imperial'],\n  },\n  {\n    title: 'COMP70028 – Reinforcement Learning',\n    competency: 74.19,\n    category: ['Imperial'],\n  },\n  {\n    title: 'COMP70022 – Scalable Systems and Data',\n    competency: 73.0,\n    category: ['Imperial'],\n  },\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\nconst GradeCategories = [\n  { name: 'LSE', color: '#AE1C28', maxScale: 100 },\n  { name: 'UC Berkeley', color: '#FDB515', maxScale: 16 },\n  { name: 'Imperial', color: '#002147', maxScale: 100 },\n];\n\nexport { GradeCategories, grades };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Research from '../components/Resume/Research';\nimport Experience from '../components/Resume/Experience';\nimport Skills from '../components/Resume/Skills';\nimport Grades from '../components/Resume/Grades';\nimport Courses from '../components/Resume/Other';\nimport References from '../components/Resume/References';\n\nimport courses from '../data/resume/other';\nimport degrees from '../data/resume/degrees';\nimport work from '../data/resume/work';\nimport research from '../data/resume/research';\nimport { skills, SkillCategories } from '../data/resume/skills';\nimport { grades, GradeCategories } from '../data/resume/grades';\n\n// NOTE: sections are displayed in order defined.\nconst sections = {\n  Education: () => <Education data={degrees} />,\n  Research: () => <Research data={research} />,\n  Experience: () => <Experience data={work} />,\n  Skills: () => <Skills skills={skills} categories={SkillCategories} />,\n  Grades: () => <Grades grades={grades} categories={GradeCategories} />,\n  Courses: () => <Courses data={courses} />,\n  References: () => <References />,\n};\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Moritz' Resume. LSE, Berkeley, Imperial, Oxford.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2>\n            <Link to=\"resume\">Resume</Link>\n          </h2>\n          <div className=\"link-container\">\n            {Object.keys(sections).map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>\n            ))}\n          </div>\n        </div>\n      </header>\n      {Object.entries(sections).map(([name, Section]) => (\n        <Section key={name} />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["_ref","data","_jsx","className","children","_jsxs","degree","href","link","school","year","Education","id","map","Degree","defaultProps","LinkRenderer","isExternal","url","startsWith","endsWith","target","rel","undefined","_ref2","name","position","startDate","endDate","summary","highlights","dayjs","format","Markdown","options","overrides","a","component","p","props","highlight","Research","job","Job","concat","Experience","handleClick","active","label","type","onClick","SkillBar","categories","category","competency","title","titleStyle","background","filter","cat","includes","color","barStyle","width","String","Math","min","max","style","Skills","skills","initialButtons","Object","fromEntries","buttons","setButtons","useState","handleChildClick","newButtons","keys","reduce","obj","key","All","some","CategoryButton","getRows","actCat","sort","comparator","b","ret","skill","GradeBar","maxScale","isNumericGrade","Number","isNaN","barWidth","barClass","grades","isNumeric","value","aIsNumeric","bIsNumeric","aCategory","find","bCategory","aMaxScale","bMaxScale","aPercentage","bPercentage","grade","gradeCategory","description","Others","others","university","number","other","idx","Other","last","length","References","Link","to","colors","SkillCategories","Set","flatMap","index","GradeCategories","sections","degrees","research","work","Grades","Courses","courses","Resume","Main","sec","toLowerCase","entries","Section"],"sourceRoot":""}